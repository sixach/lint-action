{
  "root": true,
  "extends": [
    "airbnb-base",
    "prettier",
    "plugin:jsdoc/recommended"
  ],
  "env": {
    "node": true,
    "jest": true
  },
  "settings": {
    "jsdoc": {
      "mode": "typescript"
    }
  },
  "rules": {
    "max-len": [
      "error",
      {
        "code": 100000,
        "tabWidth": 2,
        "comments": 100,
        "ignoreComments": false,
        "ignoreTrailingComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreUrls": true
      }
    ],
    "arrow-body-style": [
      "error",
      "as-needed",
      {
        "requireReturnForObjectLiteral": false
      }
    ],
    "prefer-arrow-callback": [
      "error",
      {
        "allowNamedFunctions": false,
        "allowUnboundThis": true
      }
    ],
    "curly": ["error", "all"],
    "no-console": [
      "error",
      {
        "allow": ["error"]
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message":
          "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message":
          "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message":
          "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "sort-imports": "off",
    "import/order": [
      "error",
      {
        "alphabetize": {
          "caseInsensitive": true,
          "order": "asc"
        },
        "groups": ["builtin", ["external", "internal"], ["parent", "sibling", "index"]],
        "newlines-between": "always"
      }
    ],
    "import/prefer-default-export": "off",
    "object-curly-newline": "off",
    "no-await-in-loop": "off",
    "no-unused-vars": [
      "error",
      {
        "args": "none",
        "varsIgnorePattern": "^_"
      }
    ],
    "jsdoc/check-indentation": "error",
    "jsdoc/check-syntax": "error",
    "jsdoc/newline-after-description": [
      "error",
      "never"
    ],
    "jsdoc/require-description": "error",
    "jsdoc/require-hyphen-before-param-description": "error",
    "jsdoc/require-jsdoc": "off"
  }
}